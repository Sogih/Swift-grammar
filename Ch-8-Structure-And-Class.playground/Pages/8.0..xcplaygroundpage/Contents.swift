/*:
 * structure and class
    * properties: 구조체와 클래스 내부에서 정의된 변수(상수)
    * method: 구조체와 클래스 내부에서 정의된 함수
    * member: properties + method
 */
/*:
 * structure vs class
    * 공통점
        * properties: 변수(상수)를 사용하여 값을 저장하는 프로퍼티를 정의할 수 있다
         * method: 함수를 사용하여 기능을 제공하는 메소드를 정의할 수 있다
         * subscript: 속성값에 접근할 수 있는 방법을 제공하는 서브스크립트를 정의할 수 있다
         * 초기화 블록: 객체를 원하는 초기 상태로 설정해주는 초기화 블록을 정의할 수 있다
         * extends: 객체에 함수적 기능을 추가하는 확장 구문을 사용할 수 있다
         * protocol: 특정 형식의 함수적 표준을 제공하기 위한 프로토콜을 구현할 수 있다
     * 차이점: 구조체는 할 수 없지만, 클래스는 할 수 있는 기능 (클래스≥구조체)
         * 상속: 클래스의 특성을 다른 클래스에게 물려줄 수 있다
         * 타입 캐스팅: 실행 시 컴파일러가 클래스 인스턴스의 타입을 미리 파악하고 검사할 수 있다
         * 소멸화 구문: 인스턴스가 소멸되기 직전에 처리해야 할 구문을 미리 등록해 놓을 수 있다
         * 참조에 의한 전달: 클래스 인스턴스가 전달될 때에는 참조 형식으로 제공되며, 이때 참조가 가능한 개수는 제약이 없다
 */
